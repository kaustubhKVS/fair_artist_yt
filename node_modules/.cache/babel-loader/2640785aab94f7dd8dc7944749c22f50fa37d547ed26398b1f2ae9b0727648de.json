{"ast":null,"code":"/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nexport function asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}","map":{"version":3,"mappings":"AACA;;;;AAIA,OAAM,SAAUA,YAAY,CAAEC,GAAe;EAC3C,IAAIC,UAAU,CAACC,MAAM,IAAI,IAAI,EAAE;IAC7B,OAAO,IAAIC,UAAU,CAACH,GAAG,CAACI,MAAM,EAAEJ,GAAG,CAACK,UAAU,EAAEL,GAAG,CAACM,UAAU,CAAC;;EAGnE,OAAON,GAAG;AACZ","names":["asUint8Array","buf","globalThis","Buffer","Uint8Array","buffer","byteOffset","byteLength"],"sources":["/Users/harshatolani/Downloads/Fall22/Distributed Database System/Project/my branch/fair_artist_yt/node_modules/uint8arrays/src/util/as-uint8array.ts"],"sourcesContent":["\n/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nexport function asUint8Array (buf: Uint8Array): Uint8Array {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n  }\n\n  return buf\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}