{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createGc = configure(api => {\n  /**\n   * @type {RepoAPI[\"gc\"]}\n   */\n  function gc() {\n    try {\n      let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return async function* () {\n        const res = await api.post('repo/gc', {\n          signal: options.signal,\n          searchParams: toUrlSearchParams(options),\n          headers: options.headers,\n          transform: res => {\n            return {\n              err: res.Error ? new Error(res.Error) : null,\n              cid: (res.Key || {})['/'] ? CID.parse(res.Key['/']) : null\n            };\n          }\n        });\n        yield* res.ndjson();\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  return gc;\n});","map":{"version":3,"names":["CID","configure","toUrlSearchParams","createGc","api","gc","options","res","post","signal","searchParams","headers","transform","err","Error","cid","Key","parse","ndjson"],"sources":["/Users/harshatolani/Downloads/Fall22/Distributed Database System/Project/my branch/fair_artist_yt/node_modules/ipfs-http-client/src/repo/gc.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createGc = configure(api => {\n  /**\n   * @type {RepoAPI[\"gc\"]}\n   */\n  async function * gc (options = {}) {\n    const res = await api.post('repo/gc', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: (res) => {\n        return {\n          err: res.Error ? new Error(res.Error) : null,\n          cid: (res.Key || {})['/'] ? CID.parse(res.Key['/']) : null\n        }\n      }\n    })\n\n    yield * res.ndjson()\n  }\n  return gc\n})\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;;AAElE;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAACG,GAAG,IAAI;EACvC;AACF;AACA;EACE,SAAiBC,EAAE;IAAA;MAAA,IAAEC,OAAO,uEAAG,CAAC,CAAC;MAAA,0BAAE;QACjC,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,SAAS,EAAE;UACpCC,MAAM,EAAEH,OAAO,CAACG,MAAM;UACtBC,YAAY,EAAER,iBAAiB,CAACI,OAAO,CAAC;UACxCK,OAAO,EAAEL,OAAO,CAACK,OAAO;UACxBC,SAAS,EAAGL,GAAG,IAAK;YAClB,OAAO;cACLM,GAAG,EAAEN,GAAG,CAACO,KAAK,GAAG,IAAIA,KAAK,CAACP,GAAG,CAACO,KAAK,CAAC,GAAG,IAAI;cAC5CC,GAAG,EAAE,CAACR,GAAG,CAACS,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,GAAGhB,GAAG,CAACiB,KAAK,CAACV,GAAG,CAACS,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG;YACxD,CAAC;UACH;QACF,CAAC,CAAC;QAEF,OAAQT,GAAG,CAACW,MAAM,EAAE;MACtB,CAAC;IAAA;MAAA;IAAA;EAAA;EACD,OAAOb,EAAE;AACX,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}