{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n// @ts-expect-error no types\nimport toIterable from 'stream-to-it/source.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createRead = configure(api => {\n  /**\n   * @type {FilesAPI[\"read\"]}\n   */\n  function read(path) {\n    try {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return async function* () {\n        const res = await api.post('files/read', {\n          signal: options.signal,\n          searchParams: toUrlSearchParams({\n            arg: path,\n            count: options.length,\n            ...options\n          }),\n          headers: options.headers\n        });\n        yield* toIterable(res.body);\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  return read;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","toIterable","createRead","api","read","path","options","res","post","signal","searchParams","arg","count","length","headers","body"],"sources":["/Users/harshatolani/Downloads/Fall22/Distributed Database System/Project/my branch/fair_artist_yt/node_modules/ipfs-http-client/src/files/read.js"],"sourcesContent":["import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n// @ts-expect-error no types\nimport toIterable from 'stream-to-it/source.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createRead = configure(api => {\n  /**\n   * @type {FilesAPI[\"read\"]}\n   */\n  async function * read (path, options = {}) {\n    const res = await api.post('files/read', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        count: options.length,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    yield * toIterable(res.body)\n  }\n  return read\n})\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE;AACA,OAAOC,UAAU,MAAM,wBAAwB;;AAE/C;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAGH,SAAS,CAACI,GAAG,IAAI;EACzC;AACF;AACA;EACE,SAAiBC,IAAI,CAAEC,IAAI;IAAA;MAAA,IAAEC,OAAO,uEAAG,CAAC,CAAC;MAAA,0BAAE;QACzC,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,YAAY,EAAE;UACvCC,MAAM,EAAEH,OAAO,CAACG,MAAM;UACtBC,YAAY,EAAEV,iBAAiB,CAAC;YAC9BW,GAAG,EAAEN,IAAI;YACTO,KAAK,EAAEN,OAAO,CAACO,MAAM;YACrB,GAAGP;UACL,CAAC,CAAC;UACFQ,OAAO,EAAER,OAAO,CAACQ;QACnB,CAAC,CAAC;QAEF,OAAQb,UAAU,CAACM,GAAG,CAACQ,IAAI,CAAC;MAC9B,CAAC;IAAA;MAAA;IAAA;EAAA;EACD,OAAOX,IAAI;AACb,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}